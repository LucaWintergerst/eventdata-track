{# Define variables to use throughout the template #}

{# Maximum number of indexing threads to use #}
{% set clients = 16 %}

{# Rate limit steps (ops) for combined indexing and querying #}
{% set rate_limit_ops = [2,4,6,8,10,12,14,16,18,20] %}

{# Duration of each rate limited indexing and querying benchmark in seconds #}
{% set rate_limit_duration_secs = 1800 %}

{# Number of primary shards to index into #}
{% set shard_count = 2 %}

{
  "meta": {
    "short-description": "Track for simulating different aspects of event-based use cases.",
    "description": "This track contains data generators and associated queries and aggregations to allow simulation of event-based use cases."
  },
  "indices": [
    {
      "name": "elasticlogs",
      "types": [
        {
          "name": "logs",
          "mapping": "mappings.json"
        }
      ]
    }
  ],
  "#COMMENT": "'operations' just define all possible operations but this is not the actual execution schedule. The execution is defined in the 'challenges' block and it just refers to the defined operations. The intention between this separation is to allow reuse of operations",
  "operations": [
    {
      "name": "index-append-10000",
      "operation-type": "index",
      "param-source": "elasticlogs_bulk",
      "bulk-size": 10000
    },
    {
      "name": "index-append-5000",
      "operation-type": "index",
      "param-source": "elasticlogs_bulk",
      "bulk-size": 5000
    },
    {
      "name": "index-append-2000",
      "operation-type": "index",
      "param-source": "elasticlogs_bulk",
      "bulk-size": 2000
    },
    {
      "name": "index-append-1000",
      "operation-type": "index",
      "param-source": "elasticlogs_bulk",
      "bulk-size": 1000
    },
    {
      "name": "index-append-500",
      "operation-type": "index",
      "param-source": "elasticlogs_bulk",
      "bulk-size": 500
    },
    {
      "name": "index-append-250",
      "operation-type": "index",
      "param-source": "elasticlogs_bulk",
      "bulk-size": 250
    },
    {
      "name": "index-append-125",
      "operation-type": "index",
      "param-source": "elasticlogs_bulk",
      "bulk-size": 125
    },
    {
      "name": "index-append-1000-elasticlogs_q_write",
      "operation-type": "index",
      "param-source": "elasticlogs_bulk",
      "index": "elasticlogs_q_write",
      "bulk-size": 1000
    },
    {
      "name": "index-append-1000-elasticlogs_i_write",
      "operation-type": "index",
      "param-source": "elasticlogs_bulk",
      "index": "elasticlogs_i_write",
      "bulk-size": 1000
    },
    {
      "name": "create_elasticlogs_q_write",
      "operation-type": "createindex",
      "index_name": "elasticlogs_q-000001",
      "alias": "elasticlogs_q_write",
      "index_template_body": {
        "template": "elasticlogs_q-*",
        "settings": {
          "index.refresh_interval": "5s",
          "index.codec": "best_compression",
          "index.number_of_replicas": 0,
          "index.number_of_shards": {{ shard_count }}
        },
        "mappings": {
          "logs": {
            "properties": {
              "@timestamp": { "type": "date" },
              "@message": { "type": "text", "index": false },
              "agent": { "type": "keyword", "ignore_above": 256 },
              "bytes": { "type": "integer" },
              "clientip": { "type": "ip" },
              "httpversion": { "type": "keyword", "ignore_above": 256 },
              "response": { "type": "short" },
              "verb": { "type": "keyword", "ignore_above": 256 },
              "geoip" : {
                "properties" : {
                  "country_name" : { "type": "keyword" },
                  "location" : { "type": "geo_point" }
                }
              },
              "useragent": {
                "properties": {
                  "name": { "type": "keyword", "ignore_above": 256 },
                  "os": { "type": "keyword", "ignore_above": 256 },
                  "os_name": { "type": "keyword", "ignore_above": 256 }
                }
              },
              "request": {
                "norms": false,
                "type": "text",
                "fields": {
                  "keyword": { "ignore_above": 256, "type": "keyword" }
                }
              },
              "referrer": {
                "norms": false,
                "type": "text",
                "fields": {
                  "keyword": { "ignore_above": 256, "type": "keyword" }
                }
              }
            },
            "_all": { "enabled": false }
          }
        },
        "aliases": {}
      },
      "index_template_name": "elasticlogs_q_write"
    },
    {
      "name": "create_elasticlogs_i_write",
      "operation-type": "createindex",
      "index_name": "elasticlogs_i-000001",
      "alias": "elasticlogs_i_write",
      "index_template_body": {
        "template": "elasticlogs_i-*",
        "settings": {
          "index.refresh_interval": "5s",
          "index.codec": "best_compression",
          "index.number_of_replicas": 0,
          "index.number_of_shards": {{ shard_count }}
        },
        "mappings": {
          "logs": {
            "properties": {
              "@timestamp": { "type": "date" },
              "@message": { "type": "text", "index": false },
              "agent": { "type": "keyword", "ignore_above": 256 },
              "bytes": { "type": "integer" },
              "clientip": { "type": "ip" },
              "httpversion": { "type": "keyword", "ignore_above": 256 },
              "response": { "type": "short" },
              "verb": { "type": "keyword", "ignore_above": 256 },
              "geoip" : {
                "properties" : {
                  "country_name" : { "type": "keyword" },
                  "location" : { "type": "geo_point" }
                }
              },
              "useragent": {
                "properties": {
                  "name": { "type": "keyword", "ignore_above": 256 },
                  "os": { "type": "keyword", "ignore_above": 256 },
                  "os_name": { "type": "keyword", "ignore_above": 256 }
                }
              },
              "request": {
                "norms": false,
                "type": "text",
                "fields": {
                  "keyword": { "ignore_above": 256, "type": "keyword" }
                }
              },
              "referrer": {
                "norms": false,
                "type": "text",
                "fields": {
                  "keyword": { "ignore_above": 256, "type": "keyword" }
                }
              }
            },
            "_all": { "enabled": false }
          }
        },
        "aliases": {}
      },
      "index_template_name": "elasticlogs_i_write"
    },
    {
      "name": "rollover_elasticlogs_q_write_100M",
      "operation-type": "rollover",
      "alias": "elasticlogs_q_write",
      "body": {
        "conditions": {
          "max_age":   "1d",
          "max_docs":  100000000
        }
      }
    },
    {
      "name": "rollover_elasticlogs_i_write_100M",
      "operation-type": "rollover",
      "alias": "elasticlogs_i_write",
      "body": {
        "conditions": {
          "max_age":   "1d",
          "max_docs":  100000000
        }
      }
    },
    {
      "name": "rollover_elasticlogs_q_write_10M",
      "operation-type": "rollover",
      "alias": "elasticlogs_q_write",
      "body": {
        "conditions": {
          "max_age":   "1d",
          "max_docs":  10000000
        }
      }
    },
    {
      "name": "rollover_elasticlogs_i_write_10M",
      "operation-type": "rollover",
      "alias": "elasticlogs_i_write",
      "body": {
        "conditions": {
          "max_age":   "1d",
          "max_docs":  10000000
        }
      }
    },
    {
      "name": "rollover_elasticlogs_q_write_1M",
      "operation-type": "rollover",
      "alias": "elasticlogs_q_write",
      "body": {
        "conditions": {
          "max_age":   "1d",
          "max_docs":  1000000
        }
      }
    },
    {
      "name": "rollover_elasticlogs_i_write_1M",
      "operation-type": "rollover",
      "alias": "elasticlogs_i_write",
      "body": {
        "conditions": {
          "max_age":   "1d",
          "max_docs":  1000000
        }
      }
    },
    {
      "name": "scanquery_elasticlogs_i_1m",
      "operation-type": "search",
      "index": "elasticlogs_i-*",
      "pages": 10000,
      "results-per-page": 10000,
      "body": {
        "query": {
          "range" : {
            "@timestamp" : {
              "gte" : "now-1m",
              "lt" :  "now"
            }
          }
        }
      }
    },
    {
      "name": "scanquery_elasticlogs_i_5m",
      "operation-type": "search",
      "index": "elasticlogs_i-*",
      "pages": 10000,
      "results-per-page": 10000,
      "body": {
        "query": {
          "range" : {
            "@timestamp" : {
              "gte" : "now-5m",
              "lt" :  "now"
            }
          }
        }
      }
    },
    {
      "name": "fieldstats_elasticlogs_q-*_ELASTICLOGS",
      "operation-type": "fieldstats",
      "fieldstats_id": "ELASTICLOGS",
      "index_pattern": "elasticlogs_q-*"
    },
    {
      "name": "indicesstats_elasticlogs_q-*",
      "operation-type": "indicesstats",
      "index_pattern": "elasticlogs_q-*"
    },
    {
      "name": "indicesstats_elasticlogs_i-*",
      "operation-type": "indicesstats",
      "index_pattern": "elasticlogs_i-*"
    },
    {
      "name": "indicesstats_elasticlogs_q_write",
      "operation-type": "indicesstats",
      "index_pattern": "elasticlogs_q_write"
    },
    {
      "name": "indicesstats_elasticlogs_i_write",
      "operation-type": "indicesstats",
      "index_pattern": "elasticlogs_i_write"
    },
    {
      "name": "deleteindex_elasticlogs_i-*",
      "operation-type": "deleteindex",
      "index_pattern": "elasticlogs_i-*"
    },
    {
      "name": "current-kibana-traffic-dashboard_1h",
      "operation-type": "kibana",
      "param-source": "elasticlogs_kibana",
      "dashboard":"traffic",
      "index_pattern": "elasticlogs_i-*",
      "query_string": ["*"],
      "window_end": "now",
      "window_length": "1h"
    },
    {
      "name": "current-kibana-content_issues-dashboard_1h",
      "operation-type": "kibana",
      "param-source": "elasticlogs_kibana",
      "dashboard":"content_issues",
      "index_pattern": "elasticlogs_i-*",
      "query_string": ["*"],
      "window_end": "now",
      "window_length": "1h"
    },
    {
      "name": "current-kibana-traffic-dashboard_30m",
      "operation-type": "kibana",
      "param-source": "elasticlogs_kibana",
      "dashboard":"traffic",
      "index_pattern": "elasticlogs_i-*",
      "query_string": ["*"],
      "window_end": "now",
      "window_length": "30m"
    },
    {
      "name": "current-kibana-content_issues-dashboard_30m",
      "operation-type": "kibana",
      "param-source": "elasticlogs_kibana",
      "dashboard":"content_issues",
      "index_pattern": "elasticlogs_i-*",
      "query_string": ["*"],
      "window_end": "now",
      "window_length": "30m"
    },
    {
      "name": "current-kibana-traffic-dashboard_15m",
      "operation-type": "kibana",
      "param-source": "elasticlogs_kibana",
      "dashboard":"traffic",
      "index_pattern": "elasticlogs_i-*",
      "query_string": ["*"],
      "window_end": "now",
      "window_length": "15m"
    },
    {
      "name": "current-kibana-content_issues-dashboard_15m",
      "operation-type": "kibana",
      "param-source": "elasticlogs_kibana",
      "dashboard":"content_issues",
      "index_pattern": "elasticlogs_i-*",
      "query_string": ["*"],
      "window_end": "now",
      "window_length": "15m"
    },
    {
      "name": "relative-kibana-traffic-dashboard_25%",
      "operation-type": "kibana",
      "param-source": "elasticlogs_kibana",
      "dashboard":"traffic",
      "index_pattern": "elasticlogs_q-*",
      "query_string": ["*"],
      "fieldstats_id": "ELASTICLOGS",
      "window_end": "START+25%,END",
      "window_length": "25%"
    },
    {
      "name": "relative-kibana-content_issues-dashboard_25%",
      "operation-type": "kibana",
      "param-source": "elasticlogs_kibana",
      "dashboard":"content_issues",
      "index_pattern": "elasticlogs_q-*",
      "query_string": ["*"],
      "fieldstats_id": "ELASTICLOGS",
      "window_end": "START+25%,END",
      "window_length": "25%"
    },
    {
      "name": "relative-kibana-traffic-dashboard_50%",
      "operation-type": "kibana",
      "param-source": "elasticlogs_kibana",
      "dashboard":"traffic",
      "index_pattern": "elasticlogs_q-*",
      "query_string": ["*"],
      "fieldstats_id": "ELASTICLOGS",
      "window_end": "START+50%,END",
      "window_length": "50%"
    },
    {
      "name": "relative-kibana-content_issues-dashboard_50%",
      "operation-type": "kibana",
      "param-source": "elasticlogs_kibana",
      "dashboard":"content_issues",
      "index_pattern": "elasticlogs_q-*",
      "query_string": ["*"],
      "fieldstats_id": "ELASTICLOGS",
      "window_end": "START+50%,END",
      "window_length": "50%"
    },
    {
      "name": "relative-kibana-traffic-dashboard_75%",
      "operation-type": "kibana",
      "param-source": "elasticlogs_kibana",
      "dashboard":"traffic",
      "index_pattern": "elasticlogs_q-*",
      "query_string": ["*"],
      "fieldstats_id": "ELASTICLOGS",
      "window_end": "START+75%,END",
      "window_length": "75%"
    },
    {
      "name": "relative-kibana-content_issues-dashboard_75%",
      "operation-type": "kibana",
      "param-source": "elasticlogs_kibana",
      "dashboard":"content_issues",
      "index_pattern": "elasticlogs_q-*",
      "query_string": ["*"],
      "fieldstats_id": "ELASTICLOGS",
      "window_end": "START+75%,END",
      "window_length": "75%"
    }
  ],
  "challenges": [
    {
      "name": "append-no-conflicts",
      "default": true,
      "description": "Runs indexing with a batch size of 1000 for 20 minutes. IDs are autogenerated by Elasticsearch, meaning there are no conflicts.",
      "index-settings": {
        "index.number_of_replicas": 0,
        "index.number_of_shards": {{ shard_count }}
      },
      "meta": {
        "client_count": {{ clients }}
      },
      "schedule": [
        {
          "operation": "index-append-1000",
          "warmup-time-period": 0,
          "time-period": 1200,
          "clients": {{ clients }}
        }
      ]
    },
    {
      "name": "bulk-size-evaluation",
      "description": "Indexes with different bulk sizes. IDs are autogenerated by Elasticsearch, meaning there are no conflicts.",
      "index-settings": {
        "index.number_of_replicas": 0,
        "index.number_of_shards": {{ shard_count }}
      },
      "meta": {
        "client_count": 8,
        "benchmark_type": "indexing_bulksize"
      },
      "schedule": [
        {
          "operation": "index-append-125",
          "warmup-time-period": 0,
          "time-period": 600,
          "clients": {{ clients }}
        },
        {
          "operation": "index-append-250",
          "warmup-time-period": 0,
          "time-period": 600,
          "clients": {{ clients }}
        },
        {
          "operation": "index-append-500",
          "warmup-time-period": 0,
          "time-period": 600,
          "clients": {{ clients }}
        },
        {
          "operation": "index-append-1000",
          "warmup-time-period": 0,
          "time-period": 600,
          "clients": {{ clients }}
        },
        {
          "operation": "index-append-2000",
          "warmup-time-period": 0,
          "time-period": 600,
          "clients": {{ clients }}
        },
        {
          "operation": "index-append-5000",
          "warmup-time-period": 0,
          "time-period": 600,
          "clients": {{ clients }}
        },
        {
          "operation": "index-append-10000",
          "warmup-time-period": 0,
          "time-period": 600,
          "clients": {{ clients }}
        }
      ]
    },
    {
      "name": "elasticlogs_q-1bn-load",
      "description": "Indexes 1bn documents (10 batches of 100M) into elasticlogs_q-* indices. IDs are autogenerated by Elasticsearch, meaning there are no conflicts.",
      "meta": {
        "client_count": {{ clients }},
        "benchmark_type": "indexing"
      },
      "schedule": [
        {
          "operation": "create_elasticlogs_q_write",
          "clients": 1,
          "warmup-iterations": 0,
          "iterations": 1
        },
        {% for n in range(9) %}
        {
          "operation": "index-append-1000-elasticlogs_q_write",    
          "iterations": 100000,
          "clients": {{ clients }}
        },
        {
          "operation": "rollover_elasticlogs_q_write_10M",
          "iterations": 1
        },
        {% endfor %}
        {
          "operation": "index-append-1000-elasticlogs_q_write",    
          "iterations": 100000,
          "clients": {{ clients }}
        },
        {
          "operation": "rollover_elasticlogs_q_write_10M",
          "iterations": 1
        }
      ]
    },
    {
      "name": "elasticlogs_q-2bn-load",
      "description": "Indexes 2bn documents (20 batches of 100M) into elasticlogs_q-* indices. IDs are autogenerated by Elasticsearch, meaning there are no conflicts.",
      "meta": {
        "client_count": {{ clients }},
        "benchmark_type": "indexing"
      },
      "schedule": [
        {
          "operation": "create_elasticlogs_q_write",
          "clients": 1,
          "warmup-iterations": 0,
          "iterations": 1
        },
        {% for n in range(19) %}
        {
          "operation": "index-append-1000-elasticlogs_q_write",    
          "iterations": 100000,
          "clients": {{ clients }}
        },
        {
          "operation": "rollover_elasticlogs_q_write_10M",
          "iterations": 1
        },
        {% endfor %}
        {
          "operation": "index-append-1000-elasticlogs_q_write",    
          "iterations": 100000,
          "clients": {{ clients }}
        },
        {
          "operation": "rollover_elasticlogs_q_write_10M",
          "iterations": 1
        }
      ]
    },
    {
      "name": "elasticlogs_q-500M-load",
      "description": "Indexes 500M documents (10 batches of 50M) into elasticlogs_q-* indices. IDs are autogenerated by Elasticsearch, meaning there are no conflicts.",
      "meta": {
        "client_count": {{ clients }},
        "benchmark_type": "indexing"
      },
      "schedule": [
        {
          "operation": "create_elasticlogs_q_write",
          "clients": 1,
          "warmup-iterations": 0,
          "iterations": 1
        },
        {% for n in range(9) %}
        {
          "operation": "index-append-1000-elasticlogs_q_write",    
          "iterations": 50000,
          "clients": {{ clients }}
        },
        {
          "operation": "rollover_elasticlogs_q_write_10M",
          "iterations": 1
        },
        {% endfor %}
        {
          "operation": "index-append-1000-elasticlogs_q_write",    
          "iterations": 50000,
          "clients": {{ clients }}
        },
        {
          "operation": "rollover_elasticlogs_q_write_10M",
          "iterations": 1
        }
      ]
    },
    {
      "name": "combined-indexing-and-querying",
      "description": "This challenge simulates a set of Kibana queries against historical data (elasticlogs_q-* indices) as well as against the most recent data currently being indexed. It combined this with rate-limited indexing at varying levels. It assumes one of the challenges creating elasticlogs_q-* indices has been run.",
      "meta": {
        "benchmark_type": "indexing/querying"
      },
      "schedule": [
        {
          "operation": "deleteindex_elasticlogs_i-*",
          "iterations": 1
        },
        {
          "operation": "fieldstats_elasticlogs_q-*_ELASTICLOGS",
          "iterations": 1
        },
        {
          "parallel": {
            "warmup-time-period": 0,
            "time-period": {{ rate_limit_duration_secs }},
            "tasks": [
              {
                "operation": "relative-kibana-content_issues-dashboard_25%",
                "target-interval": 60,
                "meta": {
                  "target_indexing_rate": 0
                }
              }, 
              {
                "operation": "relative-kibana-content_issues-dashboard_50%",
                "target-interval": 60,
                "meta": {
                  "target_indexing_rate": 0
                }
              }
            ]
          }
        },
        {
          "operation": "create_elasticlogs_i_write",
          "clients": 1,
          "warmup-iterations": 0,
          "iterations": 1
        },
        {# Add some data to index so it does not start empty #}
        {
          "operation": "index-append-1000-elasticlogs_i_write",    
          "warmup-time-period": {{ rate_limit_duration_secs }},
          "time-period": {{ rate_limit_duration_secs }},
          "target-throughput": 10,
          "clients": {{ clients }}
        },
        {% for ops in rate_limit_ops %}
        {% set rate = ops * 1000 %}
        {
          "parallel": {
            "warmup-time-period": 0,
            "time-period": {{ rate_limit_duration_secs }},
            "tasks": [
              {
                "operation": "index-append-1000-elasticlogs_i_write",
                "target-throughput": {{ ops }},
                "clients": {{ clients }},
                "meta": {
                  "target_indexing_rate": {{ rate }}
                }
              },
              {
                "operation": "rollover_elasticlogs_i_write_100M",
                "target-interval": 10
              },
              {
                "operation": "current-kibana-traffic-dashboard_30m",
                "target-interval": 10,
                "clients": 2,
                "meta": {
                  "target_indexing_rate": {{ rate }},
                  "dashboard": "traffic",
                  "interval": "30m",
                  "query_type": "current"
                }
              },
              { 
                "operation": "current-kibana-content_issues-dashboard_30m",
                "target-interval": 10,
                "clients": 2,
                "meta": {
                  "target_indexing_rate": {{ rate }},
                  "dashboard": "content_issues",
                  "interval": "30m",
                  "query_type": "current"
                }
              },
              { 
                "operation": "current-kibana-traffic-dashboard_15m",
                "target-interval": 5,
                "clients": 4,
                "meta": {
                  "target_indexing_rate": {{ rate }},
                  "dashboard": "traffic",
                  "interval": "15m",
                  "query_type": "current"
                }
              },
              {
                "operation": "current-kibana-content_issues-dashboard_15m",
                "target-interval": 5,
                "clients": 4,
                "meta": {
                  "target_indexing_rate": {{ rate }},
                  "dashboard": "content_issues",
                  "interval": "15m",
                  "query_type": "current"
                }
              }, 
              {
                "operation": "relative-kibana-content_issues-dashboard_25%",
                "target-interval": 30,
                "meta": {
                  "target_indexing_rate": {{ rate }},
                  "dashboard": "content_issues",
                  "interval": "25%",
                  "query_type": "historic"
                }
              }, 
              {
                "operation": "relative-kibana-content_issues-dashboard_50%",
                "target-interval": 60,
                "meta": {
                  "target_indexing_rate": {{ rate }},
                  "dashboard": "content_issues",
                  "interval": "50%",
                  "query_type": "historic"
                }
              },
              {
                "operation": "relative-kibana-content_issues-dashboard_75%",
                "target-interval": 200,
                "meta": {
                  "target_indexing_rate": {{ rate }},
                  "dashboard": "content_issues",
                  "interval": "75%",
                  "query_type": "historic"
                }
              }
            ]
          }
        },
        {% endfor %}
        {
          "operation": "indicesstats_elasticlogs_i-*",
          "iterations": 1
        }
      ]
    }
  ]
}
